function onOpen() {
  const ui = SpreadsheetApp.getUi();

  const closeSubMenu = ui
    .createMenu("Close Project")
    .addItem("This Project", `${LIB_IDENTIFIER}.closeActiveProject`)
    .addItem("Other Project...", `${LIB_IDENTIFIER}.promptProjectToClose`);

  ui.createMenu("Ace Remodeling PM Toolkit")
    .addItem("Update Dashboard", `${LIB_IDENTIFIER}.generateProjectDashboard`)
    .addItem("Add New Project", `${LIB_IDENTIFIER}.promptForNewProject`)
    .addSubMenu(closeSubMenu)
    .addSeparator()
    .addItem("üìÑ Structure Help", `${LIB_IDENTIFIER}.showStructureHelp`)
    .addItem("‚öôÔ∏è First-time Setup", `${LIB_IDENTIFIER}.showFirstTimeSetup`)
    .addToUi();
}

function showStructureHelp() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    "Dashboard Structure Help",
    `To ensure the dashboard works correctly, please follow these guidelines:\n
1Ô∏è‚É£ Each project tab must begin with a number followed by a space and client name (e.g., "123 Smith").\n
2Ô∏è‚É£ There are two supported tab formats:
   ‚Ä¢ Older tabs use fixed cell positions (e.g., M2, M7, M13, I21).\n
   ‚Ä¢ Newer tabs use named ranges (e.g., 'contract_price', 'advance_total').\n
3Ô∏è‚É£ If you‚Äôre creating a new tab, always use the "Add New Project" option from the menu ‚Äî it ensures everything is set up correctly.\n
4Ô∏è‚É£ You can safely delete or regenerate the "Projects Dashboard" at any time using the menu.\n
5Ô∏è‚É£ Edits inside any project tab will automatically trigger a dashboard update.`,
    ui.ButtonSet.OK
  );
}

function showFirstTimeSetup() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    "First-time Setup Instructions",
    `If this file was duplicated from another sheet, you must authorize the script once to enable automation:\n
1Ô∏è‚É£ Go to: Extensions ‚Üí Apps Script\n
2Ô∏è‚É£ In the Apps Script editor, click ‚ñ∂ (Run) next to any function\n
3Ô∏è‚É£ Approve the permission prompt when it appears\n
‚úÖ This only needs to be done once per user per file.`,
    ui.ButtonSet.OK
  );
}
